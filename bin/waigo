#!/usr/bin/env node --harmony

"use strict";

var _ = require('lodash'),
  co = require('co'),
  commander = require('commander'),
  debug = require('debug')('waigo-cli'),
  path = require('path'),
  shell = require('shelljs');


// check to see if we have a local installation of Waigo we can use
// (we'll assume that the CLI is always run in the project root folder, where 
// node_modules also resides)
var pathToLocalWaigoCli = 
  path.join(process.cwd(), 'node_modules', 'waigo', 'bin', 'waigo');
if (shell.test('-f', pathToLocalWaigoCli)) {
  // ['node', '../../bin/waigo', 'arg1', ...]
  var cliArgs = process.argv.slice(2);

  var spawned = shell.exec(pathToLocalWaigoCli + ' ' + cliArgs.join(' '), 
    function(code, output) {
      process.exit(code);
    }
  );

  return;
}


var waigo = require(path.join(__dirname, '..'));


co(function*() {
  // init
  yield* waigo.init({
    appFolder: __dirname
  });

  debug('Waigo initialised');

  // load all commands
  var commands = waigo.getModulesInPath('cli');

  // initialise parser
  var program = commander;

  // version
  var packageJson = require(path.join(waigo.getWaigoFolder(), '..', 'package.json'));
  program.version(packageJson.version);

  // commands
  _.each(commands, function(command) {
    debug('Found command: ' + command);
    var commandName = path.basename(command);

    var obj = new (waigo.load(command))();

    var cmd = program
      .command(commandName)
      .description(obj.description)
      .action(
        co(function*() {
          yield obj.run.apply(obj, arguments);
        })
      );

    _.each(obj.options, function(o) {
      cmd.option.apply(cmd, o);
    });
  }); 

  // parse and dispatch
  program.parse(process.argv);

})(function(err) {
  if (err) {
    console.error(err);
  }
});