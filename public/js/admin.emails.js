webpackJsonp([3],{

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var React = __webpack_require__(11);
	
	var _ = __webpack_require__(218);
	
	var UsersPage = __webpack_require__(232);
	var TemplatePage = __webpack_require__(233);
	var SendPage = __webpack_require__(234);
	
	var App = React.createClass({
	  displayName: "App",
	
	  getInitialState: function getInitialState() {
	    return {
	      users: [],
	      template: "" };
	  },
	  addUser: function addUser(user) {
	    var existing = _.find(this.state.users, function (u) {
	      return u._id === user._id;
	    });
	
	    if (!existing) {
	      this.setState({
	        users: this.state.users.concat([user])
	      });
	    }
	  },
	  removeUser: function removeUser(userOrId) {
	    if (userOrId._id) {
	      userOrId = userOrId._id;
	    }
	
	    var newUsers = this.state.users.filter(function (u) {
	      return u._id !== userOrId;
	    });
	
	    this.setState({
	      users: newUsers
	    });
	  },
	  clearUsers: function clearUsers() {
	    this.setState({
	      users: []
	    });
	  },
	  render: function render() {
	    return React.createElement(
	      "div",
	      { className: "row page-emails" },
	      React.createElement(
	        "div",
	        { className: "col s12" },
	        React.createElement(
	          "ul",
	          { className: "tabs" },
	          React.createElement(
	            "li",
	            { className: "tab col s3" },
	            React.createElement(
	              "a",
	              { className: "active", href: "#users" },
	              React.createElement(
	                "span",
	                { "class": "badge" },
	                "1."
	              ),
	              " Select users"
	            )
	          ),
	          React.createElement(
	            "li",
	            { className: "tab col s3" },
	            React.createElement(
	              "a",
	              { href: "#templates" },
	              React.createElement(
	                "span",
	                { "class": "badge" },
	                "2."
	              ),
	              " Select template"
	            )
	          ),
	          React.createElement(
	            "li",
	            { className: "tab col s3" },
	            React.createElement(
	              "a",
	              { href: "#send" },
	              React.createElement(
	                "span",
	                { "class": "badge" },
	                "3."
	              ),
	              " Send"
	            )
	          )
	        )
	      ),
	      React.createElement(
	        "section",
	        { className: "tab-content" },
	        React.createElement(
	          "div",
	          { id: "users", className: "col s12" },
	          React.createElement(UsersPage, {
	            users: this.state.users,
	            addUser: this.addUser,
	            removeUser: this.removeUser,
	            clearUsers: this.clearUsers })
	        ),
	        React.createElement(
	          "div",
	          { id: "templates", className: "col s12" },
	          React.createElement(TemplatePage, null)
	        ),
	        React.createElement(
	          "div",
	          { id: "send", className: "col s12" },
	          React.createElement(SendPage, null)
	        )
	      )
	    );
	  }
	});
	
	React.render(React.createElement(App, null), document.getElementById("react-root"));

/***/ },

/***/ 232:
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var React = __webpack_require__(11);
	
	var Button = __webpack_require__(208);
	var ModelTable = __webpack_require__(217);
	
	module.exports = React.createClass({
	  displayName: "exports",
	
	  propTypes: {
	    users: React.PropTypes.array,
	    addUser: React.PropTypes.func },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      users: [],
	      addUser: null };
	  },
	
	  onRowClick: function onRowClick(user) {
	    this.props.addUser(user);
	  },
	
	  render: function render() {
	    var self = this;
	
	    var columns = [{
	      name: "username"
	    }];
	
	    var users = React.createElement(
	      "em",
	      null,
	      "None selected"
	    );
	
	    if (this.props.users.length) {
	      users = this.props.users.map(function (user) {
	        return React.createElement(
	          "li",
	          { className: "collection-item" },
	          user.username,
	          React.createElement(
	            "a",
	            { href: "#!", className: "secondary-content",
	              "data-id": user._id, onClick: self._onRemoveUser },
	            React.createElement("i", { className: "fa fa-remove" })
	          )
	        );
	      });
	
	      users = React.createElement(
	        "div",
	        null,
	        React.createElement(Button, { label: "Clear all", size: "small", onClick: this._onClear }),
	        React.createElement(
	          "ul",
	          { className: "collection" },
	          users
	        )
	      );
	    }
	
	    return React.createElement(
	      "div",
	      { className: "row" },
	      React.createElement(
	        "div",
	        { className: "col s12 m5" },
	        React.createElement(ModelTable, {
	          modelName: "User",
	          columns: columns,
	          excludeRows: this.props.users,
	          onRowClick: this.onRowClick })
	      ),
	      React.createElement(
	        "div",
	        { className: "col s12 m6 offset-m1 selected-users" },
	        React.createElement(
	          "h2",
	          null,
	          "Selected users:"
	        ),
	        users
	      )
	    );
	  },
	
	  _onRemoveUser: function _onRemoveUser(e) {
	    e.preventDefault();
	
	    this.props.removeUser(e.currentTarget.dataset.id);
	  },
	
	  _onClear: function _onClear() {
	    this.props.clearUsers();
	  } });

/***/ },

/***/ 233:
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var React = __webpack_require__(11);
	
	module.exports = React.createClass({
	  displayName: "exports",
	
	  render: function render() {
	    return React.createElement(
	      "div",
	      { className: "content-templates" },
	      "templates"
	    );
	  }
	
	});

/***/ },

/***/ 234:
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var React = __webpack_require__(11);
	
	module.exports = React.createClass({
	  displayName: "exports",
	
	  render: function render() {
	    return React.createElement(
	      "div",
	      { className: "content-send" },
	      "send"
	    );
	  }
	
	});

/***/ }

});
//# sourceMappingURL=data:application/json;base64,