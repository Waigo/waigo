webpackJsonp([3],{

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var React = __webpack_require__(11);
	
	var UsersPage = __webpack_require__(221);
	var TemplatePage = __webpack_require__(222);
	var SendPage = __webpack_require__(223);
	
	var App = React.createClass({
	  displayName: "App",
	
	  getInitialState: function getInitialState() {
	    return {
	      users: [],
	      template: "" };
	  },
	  setUsers: function setUsers(users) {
	    this.setState({
	      users: users
	    });
	  },
	  setTemplate: function setTemplate(users) {
	    this.setState({
	      template: template
	    });
	  },
	  render: function render() {
	    return React.createElement(
	      "div",
	      { className: "row page-emails" },
	      React.createElement(
	        "div",
	        { className: "col s12" },
	        React.createElement(
	          "ul",
	          { className: "tabs" },
	          React.createElement(
	            "li",
	            { className: "tab col s3" },
	            React.createElement(
	              "a",
	              { className: "active", href: "#users" },
	              React.createElement(
	                "span",
	                { "class": "badge" },
	                "1."
	              ),
	              " Select users"
	            )
	          ),
	          React.createElement(
	            "li",
	            { className: "tab col s3" },
	            React.createElement(
	              "a",
	              { href: "#templates" },
	              React.createElement(
	                "span",
	                { "class": "badge" },
	                "2."
	              ),
	              " Select template"
	            )
	          ),
	          React.createElement(
	            "li",
	            { className: "tab col s3" },
	            React.createElement(
	              "a",
	              { href: "#send" },
	              React.createElement(
	                "span",
	                { "class": "badge" },
	                "3."
	              ),
	              " Send"
	            )
	          )
	        )
	      ),
	      React.createElement(
	        "section",
	        { className: "tab-content" },
	        React.createElement(
	          "div",
	          { id: "users", className: "col s12" },
	          React.createElement(UsersPage, this.props)
	        ),
	        React.createElement(
	          "div",
	          { id: "templates", className: "col s12" },
	          React.createElement(TemplatePage, this.props)
	        ),
	        React.createElement(
	          "div",
	          { id: "send", className: "col s12" },
	          React.createElement(SendPage, this.props)
	        )
	      )
	    );
	  }
	});
	
	React.render(React.createElement(App, null), document.getElementById("react-root"));

/***/ },

/***/ 221:
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var React = __webpack_require__(11);
	
	var ModelTable = __webpack_require__(217);
	
	module.exports = React.createClass({
	  displayName: "exports",
	
	  onRowClick: function onRowClick(user) {
	    console.log(user);
	  },
	
	  render: function render() {
	    var columns = [{
	      name: "username"
	    }];
	
	    return React.createElement(
	      "div",
	      { className: "row" },
	      React.createElement(
	        "div",
	        { className: "col s12 m5" },
	        React.createElement(ModelTable, {
	          modelName: "User",
	          columns: columns,
	          onRowClick: this.onRowClick })
	      ),
	      React.createElement(
	        "div",
	        { className: "col s12 m6 offset-m1" },
	        React.createElement(
	          "h2",
	          null,
	          "Selected users:"
	        ),
	        React.createElement(
	          "ul",
	          { className: "collection" },
	          React.createElement(
	            "li",
	            { className: "collection-item" },
	            "Alvin"
	          ),
	          React.createElement(
	            "li",
	            { className: "collection-item" },
	            "Alvin"
	          ),
	          React.createElement(
	            "li",
	            { className: "collection-item" },
	            "Alvin"
	          ),
	          React.createElement(
	            "li",
	            { className: "collection-item" },
	            "Alvin"
	          )
	        )
	      )
	    );
	  }
	
	});

/***/ },

/***/ 222:
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var React = __webpack_require__(11);
	
	module.exports = React.createClass({
	  displayName: "exports",
	
	  render: function render() {
	    return React.createElement(
	      "div",
	      { className: "content-templates" },
	      "templates"
	    );
	  }
	
	});

/***/ },

/***/ 223:
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var React = __webpack_require__(11);
	
	module.exports = React.createClass({
	  displayName: "exports",
	
	  render: function render() {
	    return React.createElement(
	      "div",
	      { className: "content-send" },
	      "send"
	    );
	  }
	
	});

/***/ }

});
//# sourceMappingURL=data:application/json;base64,